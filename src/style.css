@import url("https://fonts.googleapis.com/css?family=Nunito&display=swap");
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Nunito", sans-serif;
}

.container {
  width: 100%;
  min-height: 100vh;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  transition: background-image 0.5s linear;
}
.container::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background: inherit;
  filter: blur(5px) brightness(80%);
}
.container .box {
  z-index: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 450px;
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.6), 0 5px 15px rgba(0, 0, 0, 0.6);
  border-radius: 25px;
}
.container .box .text {
  border-top-left-radius: 25px;
  border-top-right-radius: 25px;
  height: 250px;
  padding: 20px;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  color: #ffffff;
  position: relative;
  transition: background-image 0.5s linear;
}
.container .box .text #selections {
  text-align: center;
  width: 100%;
}
.container .box .text #selections * {
  margin: 0 5px;
  padding: 5px 10px;
}
.container .box .text #selections #year-input {
  width: 80px;
}
.container .box .text #selections input[type=submit] {
  border-radius: 10px;
}
.container .box .text h2, .container .box .text p {
  text-shadow: 0 0 9px rgba(0, 0, 0, 0.8);
}
.container .box .text h2 {
  font-size: 1.7em;
}
.container .box .text p {
  margin-top: 5px;
  font-size: 1.3em;
  letter-spacing: 2px;
}
.container .box .dates {
  border-bottom-left-radius: 25px;
  border-bottom-right-radius: 25px;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(50px, 1fr));
  grid-gap: 10px;
  height: 250px;
  text-align: center;
  justify-content: center;
  align-items: center;
  padding: 20px;
  background: #ffffff;
  color: #000;
}
/*Takes the 8th child of 7 elements so ends up highlighting the 1st element*/
.container .box .dates div:nth-child(7n+1) {
  color: red;
  font-weight: bold;
}
.container .box .dates .today {
  background: #83e6a4;
  border-radius: 10px;
  font-weight: bold;
}

@media (max-width: 565px) {
  .container .box {
    width: 350px;
  }
  .container .box .text {
    height: 200px;
  }
  .container .box .text h2 {
    margin-top: 10px;
    font-size: 1.2em;
  }
  .container .box .text p {
    margin-top: 5px;
    font-size: 1.1em;
    letter-spacing: 1px;
  }
  .container .box .dates {
    grid-template-columns: repeat(7, 1fr);
    grid-gap: 0px;
  }
}

/* basic reset */
*,
::before,
::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
}

ul {
  list-style: none;
}

h1 {
  font-size: 24px;
  font-weight: 900;
}

h2 {
  font-size: 16px;
  font-weight: 500;
}

.btn {
  padding: 16px 32px;
  font-size: 1em;
  border: none;
  outline: none;
  cursor: pointer;
  text-align: center;
  border-radius: 9px;
  position: relative;
  transition: all 0.2s linear;
}

body {
  height: 100vh;
  background: radial-gradient(circle, rgb(255, 255, 255) 70%, rgb(243, 243, 243) 100%);
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  color: #292d34;
}

.popup-btn {
  width: 160px;
  height: 160px;
  background: white;
  border-radius: 100%;
  box-shadow: 0 10px 25px rgba(124, 130, 141, 0.2);
  cursor: pointer;
  transition: all 0.25s ease-out;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: block;
}
.popup-btn:hover {
  transform: translate(-50%, calc(-50% - 5px));
}
.popup-btn img {
  max-width: 70%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.overlay {
  position: fixed;
  z-index: 1000;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: rgba(255, 255, 255, 0.5);
  transition: all 1s;

/* overlay is hidden by default */
/* I don't use "display:none" as it is harder to animate */
  opacity: 0;
  visibility: hidden;
}

.popup {
  position: fixed;
  top: 50%;
  left: 50%;
  width: 50%;
  height: auto;
  max-width: 630px;
  min-width: 320px;
  z-index: 2000;
  transform: translateX(-50%) translateY(-50%);

/* popup is hidden by default */
  visibility: hidden;

/* I use two properties below as I have rotation in 3D */
  backface-visibility: hidden;  
  perspective: 1300px;
}

.popup .content {
  padding: 24px;
  border-radius: 9px;
  box-shadow: 0 10px 25px rgba(124, 130, 141, 0.2);
  transition: all 0.7s;

/* ".content block is hidden by default" */
/* and also it is rotated at -70 degrees */
/* at the revelation moment it will rotate to 0 degrees */
  transform: rotateX(-70deg);
  opacity: 0;

  transform-style: preserve-3d;

/* Glassmorphism styles */
  background: rgba(255, 255, 255, 0.55);
  backdrop-filter: blur(4.5px);
  -webkit-backdrop-filter: blur(4.5px);
  border: 1px solid rgba(255, 255, 255, 0.18);
}
.popup .content .img-container {
  text-align: center;
  margin-bottom: 16px;
}
.popup .content .img-container img {
  max-width: 140px;
  vertical-align: middle;
}
.popup .content .title-text {
  text-align: center;
  margin-bottom: 16px;
}
.popup .content .paragraph-text {
  width: 70%;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 48px;
  color: #7c828d;
}
.popup .content .btn-container {
  text-align: center;
}
.popup .content .btn-container .btn {
  background: #b9bec7;
  color: white;
  box-shadow: 0 10px 25px rgba(124, 130, 141, 0.2);
  transition: all 0.9s ease;
}
.popup .content .btn-container .btn:hover {
  background: #7c828d;
}

/* Modal Window Revelation */

/* Pay attention that .popup only becomes visible */
/* no animations here! */
.popup.show {
  visibility: visible;
}

/* pay attention to the selectors logic */
/* I used general sibling combinator here */
/* not the child or descendant selector */
/* as there are version using them */
.popup.show ~ .overlay {
  opacity: 1;
  visibility: visible;
}

/* read it like this: */
/* as soon as .popup gets the .show class */
/* reveal the .content i.e. make it visible and rotate to 0 degrees */
/* and as the .content has a "transition: all 0.7s" */
/* animation will take place */
.popup.show .content {
  transform: rotateX(0deg);
  opacity: 1;
}

.popup.show ~ .popup-btn {
  display: none;
}


